import json

# Load inventory data from file
def load_inventory(filename="inventory.json"):
    """Load inventory data from a JSON file."""
    try:
        with open(filename, "r") as file:
            inventory = json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        inventory = []  # Return an empty list if the file doesn't exist or is empty
    return inventory

# Save inventory data to a file
def save_inventory(inventory, filename="inventory.json"):
    """Save inventory data to a JSON file."""
    with open(filename, "w") as file:
        json.dump(inventory, file, indent=4)

# Display all products in the inventory
def display_inventory(inventory):
    """Display all products in the inventory."""
    if not inventory:
        print("No products found in inventory.")
    else:
        print("\nProduct Inventory:")
        for idx, product in enumerate(inventory, start=1):
            print(f"{idx}. Product: {product['name']}, Quantity: {product['quantity']}, Price: ${product['price']}")
        print()

# Add a new product to the inventory
def add_product(inventory):
    """Add a new product to the inventory."""
    name = input("Enter product name: ")
    quantity = input("Enter product quantity: ")
    price = input("Enter product price: ")

    # Validate inputs
    try:
        quantity = int(quantity)
        price = float(price)
    except ValueError:
        print("Invalid quantity or price. Please enter valid numbers.")
        return

    inventory.append({"name": name, "quantity": quantity, "price": price})
    print(f"Product '{name}' added successfully!\n")

# Update an existing product's details
def update_product(inventory):
    """Update a product's details."""
    display_inventory(inventory)
    try:
        prod_num = int(input("Enter the product number to update: "))
        if prod_num < 1 or prod_num > len(inventory):
            print("Invalid product number.")
            return

        product = inventory[prod_num - 1]
        print(f"Current details: {product}")

        name = input(f"Enter new name (leave blank to keep '{product['name']}'): ")
        if name:
            product['name'] = name

        quantity = input(f"Enter new quantity (leave blank to keep '{product['quantity']}'): ")
        if quantity:
            try:
                product['quantity'] = int(quantity)
            except ValueError:
                print("Invalid quantity input. Keeping previous value.")

        price = input(f"Enter new price (leave blank to keep '{product['price']}'): ")
        if price:
            try:
                product['price'] = float(price)
            except ValueError:
                print("Invalid price input. Keeping previous value.")

        print(f"Product details updated: {product}\n")

    except ValueError:
        print("Invalid input! Please enter a valid product number.\n")

# Delete a product from the inventory
def delete_product(inventory):
    """Delete a product from the inventory."""
    display_inventory(inventory)
    try:
        prod_num = int(input("Enter the product number to delete: "))
        if prod_num < 1 or prod_num > len(inventory):
            print("Invalid product number.")
            return

        deleted_product = inventory.pop(prod_num - 1)
        print(f"Product '{deleted_product['name']}' deleted successfully!\n")

    except ValueError:
        print("Invalid input! Please enter a valid product number.\n")

# Main program loop
def main():
    """Main loop for the Inventory Management System."""
    inventory = load_inventory()  # Load inventory data from file at the start

    while True:
        print("Inventory Management System")
        print("1. View Inventory")
        print("2. Add Product")
        print("3. Update Product")
        print("4. Delete Product")
        print("5. Exit")

        choice = input("Enter your choice (1/2/3/4/5): ")

        if choice == '1':
            display_inventory(inventory)
        elif choice == '2':
            add_product(inventory)
        elif choice == '3':
            update_product(inventory)
        elif choice == '4':
            delete_product(inventory)
        elif choice == '5':
            save_inventory(inventory)  # Save inventory data before exiting
            print("Exiting the Inventory Management System. Goodbye!")
            break
        else:
            print("Invalid choice! Please choose a valid option.\n")

if __name__ == "__main__":
    main()
